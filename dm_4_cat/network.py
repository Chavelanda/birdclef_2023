# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_network.ipynb.

# %% auto 0
__all__ = ['model_dict', 'get_model']

# %% ../nbs/02_network.ipynb 3
from typing import Union, BinaryIO, IO
from os import PathLike

import torch
from torch.nn import Module


# %% ../nbs/02_network.ipynb 6
model_dict = {
            
        }

def get_model(model_key:str, # A key of the model dictionary
              weights_path:Union[str, PathLike, BinaryIO, IO[bytes]] = None   # A file-like object to the model weights
              )->Module:      # A pytorch model
    "A getter method to retrieve the wanted (possibly pretrained) model"
    assert model_key in model_dict, f'{model_key} is not an existing network, choose one from {model_dict.keys()}.'
    
    net_class, kwargs = model_dict[model_key]
    model = net_class(**kwargs)

    if weights_path is not None:
        model.load_state_dict(torch.load(weights_path))

    return model
